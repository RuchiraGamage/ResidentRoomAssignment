server:
  port: 8080
spring:
  profiles:
    active: dev
---
spring:
  profiles: dev
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/resident_room_db
    password: password
  jackson:
    serialization:
      fail-on-empty-beans: 'false'
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: 'true'
  security:
    oauth2:
      client:
        registration:
          api-client-oidc:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: api-client-oidc
          api-client-authorization-code:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: api.read
            client-name: api-client-authorization-code
        provider:
          spring:
            issuer-uri: http://127.0.0.1:9000

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,beans"

---
spring:
  profiles: qa
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/resident_room_db_qa
    password: password
  jackson:
    serialization:
      fail-on-empty-beans: 'false'
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: 'true'

---
spring:
  profiles: prod
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/resident_room_db_prod
    password: password
  jackson:
    serialization:
      fail-on-empty-beans: 'false'
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: 'true'
